import pandas as pd
import pytest


@pytest.fixture
def filtered_transactions() -> pd.DataFrame:
    return pd.DataFrame({
        "Дата операции": pd.to_datetime(["02.02.2023 00:00:00",
                                         "02.02.2023 00:00:00",
                                         "03.02.2023 00:00:00",
                                         "03.02.2023 00:00:00",
                                         "04.02.2023 00:00:00",
                                         "04.02.2023 00:00:00",
                                         "05.02.2023 00:00:00",
                                         "05.02.2023 00:00:00",
                                         "05.02.2023 00:00:00"], format="%d.%m.%Y %H:%M:%S"),
        "Номер карты": ["*4556", "*7197", "*4556", "*7197", "*4556", "*7197", "*4556", "*7197", "*7197"],
        "Сумма операции": [1000, -2000, -800.5, -1000, -300, -400, -10000, -350, 100],
        "Кэшбэк": [0, 20, 0, 0, 0, 0, 100, 0, 0],
        "Сумма операции с округлением": [1000, 2000, 800, 1000, 300, 400, 10000, 350, 100],
        "Категория": ["Переводы", "Наличные", "Супермаркеты", "Аптеки", "Переводы",
                      "Детские товары", "Дом и ремонт", "Связь", "Пополнения"],
        "Описание": ["Дмитрий Р.", "Снятие в банкомате Тинькофф", "Магнит", "Аптека Вита", "Андрей Х.",
                     "Детский Мир", "МаксидоМ", "Devajs Servis.", "Перевод с карты"]
    })


@pytest.fixture
def filtered_transactions_invalid() -> pd.DataFrame:
    return pd.DataFrame({
        "Дата_операции": pd.to_datetime(["02.02.2023 00:00:00",
                                         "02.02.2023 00:00:00",
                                         "03.02.2023 00:00:00",
                                         "03.02.2023 00:00:00",
                                         "04.02.2023 00:00:00",
                                         "04.02.2023 00:00:00",
                                         "05.02.2023 00:00:00",
                                         "05.02.2023 00:00:00",
                                         "05.02.2023 00:00:00"], format="%d.%m.%Y %H:%M:%S"),
        "Номер_карты": ["*4556", "*7197", "*4556", "*7197", "*4556", "*7197", "*4556", "*7197", "*7197"],
        "Сумма_операции": [1000, -2000, -800.5, -1000, -300, -400, -10000, -350, 100],
        "Кэшбэк_": [0, 20, 0, 0, 0, 0, 100, 0, 0],
        "Сумма_операции с округлением": [1000, -2000, -800, -1000, -300, -400, -10000, -350, 100],
        "Категория_": ["Переводы", "Наличные", "Супермаркеты", "Аптеки", "Переводы",
                       "Детские товары", "Дом и ремонт", "Связь", "Пополнения"],
        "Описание_": ["Дмитрий Р.", "Снятие в банкомате Тинькофф", "Магнит", "Аптека Вита", "Андрей Х.",
                      "Детский Мир", "МаксидоМ", "Devajs Servis.", "Перевод с карты"]
    })


@pytest.fixture
def filtered_transactions_list() -> list[dict]:
    transact_df = pd.DataFrame({
        "Дата операции": pd.to_datetime(["02.02.2023 00:00:00",
                                         "02.02.2023 00:00:00",
                                         "03.02.2023 00:00:00",
                                         "03.02.2023 00:00:00",
                                         "04.02.2023 00:00:00",
                                         "04.02.2023 00:00:00",
                                         "05.02.2023 00:00:00",
                                         "05.02.2023 00:00:00",
                                         "05.02.2023 00:00:00"], format="%d.%m.%Y %H:%M:%S"),
        "Номер карты": ["*4556", "*7197", "*4556", "*7197", "*4556", "*7197", "*4556", "*7197", "*7197"],
        "Сумма операции": [1000, -2000, -800.5, -1000, -300, -400, -10000, -350, 100],
        "Кэшбэк": [0, 20, 0, 0, 0, 0, 100, 0, 0],
        "Сумма операции с округлением": [1000, 2000, 800, 1000, 300, 400, 10000, 350, 100],
        "Категория": ["Переводы", "Наличные", "Супермаркеты", "Аптеки", "Переводы",
                      "Детские товары", "Дом и ремонт", "Связь", "Пополнения"],
        "Описание": ["Дмитрий Р.", "Снятие в банкомате Тинькофф", "Магнит", "Аптека Вита", "Андрей Х.",
                     "Детский Мир", "МаксидоМ", "Devajs Servis.", "Перевод с карты"]
    })

    return transact_df.to_dict(orient="records")


@pytest.fixture
def filtered_transactions_invalid_list() -> list[dict]:
    transact_df = pd.DataFrame({
        "Дата_операции": pd.to_datetime(["02.02.2023 00:00:00",
                                         "02.02.2023 00:00:00",
                                         "03.02.2023 00:00:00",
                                         "03.02.2023 00:00:00",
                                         "04.02.2023 00:00:00",
                                         "04.02.2023 00:00:00",
                                         "05.02.2023 00:00:00",
                                         "05.02.2023 00:00:00",
                                         "05.02.2023 00:00:00"], format="%d.%m.%Y %H:%M:%S"),
        "Номер_карты": ["*4556", "*7197", "*4556", "*7197", "*4556", "*7197", "*4556", "*7197", "*7197"],
        "Сумма_операции": [1000, -2000, -800.5, -1000, -300, -400, -10000, -350, 100],
        "Кэшбэк_": [0, 20, 0, 0, 0, 0, 100, 0, 0],
        "Сумма_операции с округлением": [1000, -2000, -800, -1000, -300, -400, -10000, -350, 100],
        "Категория_": ["Переводы", "Наличные", "Супермаркеты", "Аптеки", "Переводы",
                       "Детские товары", "Дом и ремонт", "Связь", "Пополнения"],
        "Описание_": ["Дмитрий Р.", "Снятие в банкомате Тинькофф", "Магнит", "Аптека Вита", "Андрей Х.",
                      "Детский Мир", "МаксидоМ", "Devajs Servis.", "Перевод с карты"]
    })

    return transact_df.to_dict(orient="records")
